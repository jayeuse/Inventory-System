# Generated by Django 5.2.6 on 2025-09-26 10:48

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_code', models.UUIDField(db_column='category_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_id', models.CharField(db_column='category_id', editable=False, max_length=15, unique=True)),
                ('category_name', models.CharField(db_column='category_name', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Dispense',
            fields=[
                ('dispense_code', models.UUIDField(db_column='dispense_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispense_id', models.CharField(db_column='dispense_id', editable=False, max_length=15, unique=True)),
                ('requested_by', models.TextField(db_column='requested_by')),
                ('approved_by', models.TextField(blank=True, db_column='approved_by', null=True)),
                ('dispensed_to', models.TextField(blank=True, db_column='dispensed_to', null=True)),
                ('reason', models.TextField(db_column='reason')),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('PENDING', 'Pending'), ('REJECTED', 'Rejected'), ('RELEASED', 'Released'), ('CANCELLED', 'Cancelled')], db_column='status', default='PENDING', max_length=10)),
                ('date_requested', models.DateTimeField(db_column='date_requested', default=django.utils.timezone.now)),
                ('date_dispensed', models.DateTimeField(blank=True, db_column='date_dispensed', null=True)),
            ],
            options={
                'db_table': 'dispense',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_code', models.UUIDField(db_column='location_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('location_id', models.CharField(db_column='location_id', editable=False, max_length=15, unique=True)),
                ('location_name', models.CharField(db_column='location_name', max_length=255, unique=True)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_code', models.UUIDField(db_column='order_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_id', models.CharField(db_column='order_id', editable=False, max_length=20, unique=True)),
                ('ordered_by', models.TextField(db_column='ordered_by')),
                ('received_by', models.TextField(blank=True, db_column='received_by', null=True)),
                ('date_ordered', models.DateTimeField(db_column='date_ordered', default=django.utils.timezone.now)),
                ('date_received', models.DateTimeField(blank=True, db_column='date_received', null=True)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('PENDING', 'Pending'), ('PARTIAL', 'Partial'), ('REJECTED', 'Rejected'), ('RECEIVED', 'Received'), ('CANCELLED', 'Cancelled')], db_column='status', default='PENDING', max_length=10)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_code', models.UUIDField(db_column='supplier_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supplier_id', models.CharField(db_column='supplier_id', editable=False, max_length=15, unique=True)),
                ('supplier_name', models.CharField(db_column='supplier_name', max_length=255, unique=True)),
                ('contact_info', models.TextField(blank=True, db_column='contact_info', null=True)),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='DispenseEvent',
            fields=[
                ('event_code', models.UUIDField(db_column='event_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_id', models.CharField(db_column='event_id', editable=False, max_length=20, unique=True)),
                ('event_type', models.CharField(choices=[('CREATED', 'Created'), ('APPROVED', 'Approved'), ('RELEASED', 'Released'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], db_column='event_type', max_length=20)),
                ('previous_status', models.CharField(db_column='previous_status', max_length=10)),
                ('new_status', models.CharField(db_column='new_status', max_length=10)),
                ('performed_by', models.TextField(db_column='performed_by')),
                ('timestamp', models.DateTimeField(db_column='timestamp', default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, db_column='notes', null=True)),
                ('dispense', models.ForeignKey(db_column='dispense_id', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='inventory_system.dispense', to_field='dispense_id')),
            ],
            options={
                'db_table': 'dispense_event',
            },
        ),
        migrations.CreateModel(
            name='OrderEvent',
            fields=[
                ('event_code', models.UUIDField(db_column='event_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_id', models.CharField(db_column='event_id', editable=False, max_length=20, unique=True)),
                ('event_type', models.CharField(db_column='event_type', max_length=20)),
                ('previous_status', models.CharField(db_column='previous_status', max_length=10, null=True)),
                ('new_status', models.CharField(db_column='new_status', max_length=10)),
                ('performed_by', models.TextField(db_column='performed_by')),
                ('timestamp', models.DateTimeField(db_column='timestamp', default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, db_column='notes', null=True)),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='inventory_system.order', to_field='order_id')),
            ],
            options={
                'db_table': 'order_event',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_code', models.UUIDField(db_column='product_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_id', models.CharField(db_column='product_id', editable=False, max_length=20, unique=True)),
                ('product_name', models.TextField(db_column='product_name')),
                ('sku', models.CharField(db_column='sku', max_length=100, unique=True)),
                ('price', models.DecimalField(db_column='price', decimal_places=2, max_digits=10)),
                ('modified', models.DateTimeField(auto_now=True, db_column='modified')),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.category', to_field='category_id')),
                ('location', models.ForeignKey(blank=True, db_column='location_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_system.location', to_field='location_id')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('batch_code', models.UUIDField(db_column='batch_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('batch_id', models.CharField(db_column='batch_id', editable=False, max_length=20, unique=True)),
                ('lot_number', models.CharField(db_column='lot_number', max_length=100)),
                ('expiry_date', models.DateTimeField(db_column='expiry_date')),
                ('quantity', models.PositiveIntegerField(db_column='quantity')),
                ('reserved', models.PositiveIntegerField(db_column='reserved', default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('modified_at', models.DateTimeField(auto_now=True, db_column='modified_at')),
                ('location', models.ForeignKey(blank=True, db_column='location_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_system.location', to_field='location_id')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
            ],
            options={
                'db_table': 'product_batch',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_item_code', models.UUIDField(db_column='order_item_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_item_id', models.CharField(db_column='order_item_id', editable=False, max_length=20, unique=True)),
                ('quantity_ordered', models.PositiveIntegerField(db_column='quantity_ordered')),
                ('quantity_received', models.PositiveIntegerField(db_column='quantity_received', default=0)),
                ('price_per_unit', models.DecimalField(db_column='price_per_unit', decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(db_column='total_price', decimal_places=2, max_digits=12)),
                ('total_cost', models.DecimalField(db_column='total_cost', decimal_places=2, max_digits=12)),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory_system.order', to_field='order_id')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
                ('batch', models.ForeignKey(blank=True, db_column='batch_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory_system.productbatch', to_field='batch_id')),
            ],
            options={
                'db_table': 'order_item',
            },
        ),
        migrations.CreateModel(
            name='DispenseItem',
            fields=[
                ('dispense_item_code', models.UUIDField(db_column='dispense_item_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispense_item_id', models.CharField(db_column='dispense_item_id', editable=False, max_length=20, unique=True)),
                ('quantity_dispensed', models.PositiveIntegerField(db_column='quantity_dispensed')),
                ('dispense', models.ForeignKey(db_column='dispense_id', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory_system.dispense', to_field='dispense_id')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
                ('batch', models.ForeignKey(db_column='batch_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.productbatch', to_field='batch_id')),
            ],
            options={
                'db_table': 'dispense_item',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='supplier',
            field=models.ForeignKey(db_column='supplier_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.supplier', to_field='supplier_id'),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_code', models.UUIDField(db_column='transaction_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(db_column='transaction_id', editable=False, max_length=20, unique=True)),
                ('transaction_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJUSTMENT', 'Adjustment')], db_column='transaction_type', max_length=20)),
                ('related_id', models.CharField(blank=True, db_column='related_id', max_length=36, null=True)),
                ('quantity_change', models.IntegerField(db_column='quantity_change')),
                ('before', models.IntegerField(db_column='before')),
                ('after', models.IntegerField(db_column='after')),
                ('performed_by', models.TextField(db_column='performed_by')),
                ('date', models.DateTimeField(db_column='date', default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, db_column='notes', null=True)),
                ('batch', models.ForeignKey(blank=True, db_column='batch_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_system.productbatch', to_field='batch_id')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
    ]
