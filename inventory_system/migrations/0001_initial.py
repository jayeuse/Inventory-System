# Generated by Django 5.2.6 on 2025-10-18 06:35

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_code', models.UUIDField(db_column='category_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_id', models.CharField(db_column='category_id', editable=False, max_length=15, unique=True)),
                ('category_name', models.CharField(db_column='category_name', max_length=100, unique=True)),
                ('category_description', models.TextField(blank=True, db_column='category_description', null=True)),
                ('product_count', models.PositiveIntegerField(db_column='product_count', default=0)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_code', models.UUIDField(db_column='order_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_id', models.CharField(db_column='order_id', editable=False, max_length=20, unique=True)),
                ('ordered_by', models.TextField(db_column='ordered_by')),
                ('date_ordered', models.DateTimeField(db_column='date_ordered', default=django.utils.timezone.now)),
                ('date_received', models.DateTimeField(blank=True, db_column='date_received', null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Partially Received', 'Partially Received'), ('Received', 'Received'), ('Cancelled', 'Cancelled')], db_column='status', default='Pending', max_length=20)),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplier_code', models.UUIDField(db_column='supplier_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supplier_id', models.CharField(db_column='supplier_id', editable=False, max_length=15, unique=True)),
                ('supplier_name', models.CharField(db_column='supplier_name', max_length=255, unique=True)),
                ('contact_person', models.TextField(blank=True, db_column='contact_person', null=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, db_column='phone_number', max_length=20, null=True)),
                ('address', models.TextField(blank=True, db_column='address', null=True)),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_code', models.UUIDField(db_column='product_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_id', models.CharField(db_column='product_id', editable=False, max_length=20, unique=True)),
                ('brand_name', models.CharField(db_column='brand_name', max_length=255)),
                ('generic_name', models.CharField(db_column='generic_name', max_length=255)),
                ('price_per_unit', models.DecimalField(db_column='price', decimal_places=2, max_digits=10)),
                ('unit_of_measurement', models.CharField(db_column='unit_of_measurement', max_length=50)),
                ('expiry_threshold_days', models.PositiveIntegerField(db_column='expiry_threshold_days', default=30)),
                ('low_stock_threshold', models.PositiveIntegerField(db_column='low_stock_threshold', default=10)),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='inventory_system.category', to_field='category_id')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductStocks',
            fields=[
                ('stock_code', models.UUIDField(db_column='stock_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_id', models.CharField(db_column='stock_id', editable=False, max_length=30, unique=True)),
                ('total_on_hand', models.PositiveIntegerField(db_column='total_on_hand', default=0)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
            ],
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('batch_code', models.UUIDField(db_column='batch_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('batch_id', models.CharField(db_column='batch_id', editable=False, max_length=30, unique=True)),
                ('on_hand', models.PositiveIntegerField(db_column='on_hand', default=0)),
                ('expiry_date', models.DateField(db_column='expiry_date', db_index=True)),
                ('status', models.CharField(choices=[('Normal', 'Normal'), ('Near Expiry', 'Near Expiry'), ('Expired', 'Expired'), ('Low Stock', 'Low Stock'), ('Out of Stock', 'Out of Stock')], db_column='status', default='Normal', max_length=20)),
                ('product_stock', models.ForeignKey(db_column='stock_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.productstocks', to_field='stock_id')),
            ],
            options={
                'db_table': 'product_batch',
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('subcategory_code', models.UUIDField(db_column='subcategory_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('subcategory_id', models.CharField(db_column='subcategory_id', editable=False, max_length=15, unique=True)),
                ('subcategory_name', models.CharField(db_column='subcategory_name', max_length=100, unique=True)),
                ('subcategory_description', models.TextField(blank=True, db_column='subcategory_description', null=True)),
                ('category', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory_system.category', to_field='category_id')),
            ],
            options={
                'db_table': 'subcategory',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(db_column='subcategory_id', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='inventory_system.subcategory', to_field='subcategory_id'),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_item_code', models.UUIDField(db_column='order_item_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_item_id', models.CharField(db_column='order_item_id', editable=False, max_length=30, unique=True)),
                ('quantity_ordered', models.PositiveIntegerField(db_column='quantity_ordered')),
                ('quantity_received', models.PositiveIntegerField(db_column='quantity_received', default=0)),
                ('price_per_unit', models.DecimalField(db_column='price_per_unit', decimal_places=2, max_digits=10)),
                ('total_cost', models.DecimalField(db_column='total_cost', decimal_places=2, default=0, max_digits=12)),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory_system.order', to_field='order_id')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
                ('supplier', models.ForeignKey(db_column='supplier_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.supplier', to_field='supplier_id')),
            ],
            options={
                'db_table': 'order_item',
            },
        ),
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('supplier_product_code', models.UUIDField(db_column='supplier_product_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('supplier_product_id', models.CharField(db_column='supplier_product_id', editable=False, max_length=30, unique=True)),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
                ('supplier', models.ForeignKey(db_column='supplier_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.supplier', to_field='supplier_id')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_code', models.UUIDField(db_column='transaction_code', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(db_column='transaction_id', editable=False, max_length=20, unique=True)),
                ('transaction_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJ', 'Stock Adjustment')], db_column='transaction_type', max_length=20)),
                ('quantity_change', models.IntegerField(db_column='quantity_change')),
                ('on_hand', models.IntegerField(db_column='on_hand')),
                ('remarks', models.TextField(blank=True, db_column='remarks', null=True)),
                ('performed_by', models.TextField(db_column='performed_by')),
                ('date_of_transaction', models.DateTimeField(db_column='date_of_transaction', default=django.utils.timezone.now)),
                ('batch', models.ForeignKey(blank=True, db_column='batch_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory_system.productbatch', to_field='batch_id')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, to='inventory_system.product', to_field='product_id')),
            ],
            options={
                'db_table': 'transaction',
            },
        ),
    ]
